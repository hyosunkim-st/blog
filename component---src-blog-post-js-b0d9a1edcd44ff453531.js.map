{"version":3,"sources":["webpack:///./src/blog/components/hero.js","webpack:///./src/blog/components/sidebar.js","webpack:///./src/blog/components/emailForm.js","webpack:///./src/blog/components/suggested.js","webpack:///./src/blog/components/body.js","webpack:///./src/blog/seo.js","webpack:///./src/blog/post.js"],"names":["props","className","to","category","title","author","date","desc","img","location","encodeURIComponent","pathname","query","render","data","base","site","siteMetadata","siteUrl","style","gridArea","position","top","href","action","mailChimpUrl","method","type","name","placeholder","class","mailChimpToken","tabindex","value","allMarkdownRemark","edges","map","node","frontmatter","slug","fluid","postImage","childImageSharp","alt","metaDescription","dangerouslySetInnerHTML","__html","content","image","description","siteTitle","post","dateOriginal","html","original","src"],"mappings":"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","file":"component---src-blog-post-js-b0d9a1edcd44ff453531.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport \"tachyons\";\r\n\r\n\r\nexport default props => (\r\n  <div className=\"bg-washed-red ph2 pv5 flex flex-column justify-center items-center\">\r\n    <Link to={`/${props.category}`} className=\"sans-serif ttu mid-gray tracked f6\">{props.category}</Link>\r\n    <h1 className=\"dark-gray display fw4 f1-l f2 tc\">{props.title}</h1>\r\n    <span className=\"sans-serif tracked ttu f6 mb2\">by {props.author}</span>\r\n    <span className=\"sans-serif tracked ttu f6\">{props.date}</span>\r\n  </div>\r\n)\r\n","import React from 'react';\r\nimport {\r\n  FaPinterestP,\r\n  FaFacebookF\r\n} from 'react-icons/fa';\r\nimport {FiMail} from 'react-icons/fi'\r\nimport { StaticQuery, graphql } from 'gatsby';\r\nimport 'tachyons';\r\n\r\n\r\nexport default (props) => {\r\n  let { desc, img, location } = props;\r\n  location = encodeURIComponent(location.pathname);\r\n  desc = encodeURIComponent(desc);\r\n  img = encodeURIComponent(img);\r\n  return (\r\n    <StaticQuery\r\n      query={graphql`\r\n        query {\r\n          site {\r\n            siteMetadata {\r\n              siteUrl\r\n            }\r\n          }\r\n        }  \r\n      `}\r\n      render={data => {\r\n        const base = encodeURIComponent(data.site.siteMetadata.siteUrl);\r\n        return (\r\n        <div className=\"dn db-l\" style={{gridArea: \"sidebar\"}}>\r\n          <div className=\"w3 bg-dark-gray flex flex-wrap\" style={{position: \"sticky\", top: \"4rem\"}}>\r\n            <a\r\n              href={`https://pinterest.com/pin/create/button/?url=${base + location}&description=${desc}&media=${base + img}`}\r\n              className=\"w-100 h3 flex items-center justify-center b near-white\"><FaPinterestP /></a>\r\n            <a\r\n              href={`https://www.facebook.com/sharer/sharer.php?u=${base + location}`}\r\n              className=\"w-100 h3 flex items-center justify-center b near-white\"><FaFacebookF /></a>\r\n            <a\r\n              href={`mailto:?&body=${base + location}`}\r\n              className=\"w-100 h3 flex items-center justify-center b near-white\"><FiMail /></a>\r\n          </div>\r\n        </div>\r\n    )}} />\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { StaticQuery, graphql } from 'gatsby';\r\n\r\n\r\n\r\nexport default props => (\r\n  <div className=\"w-100 bg-light-gray pa3\">\r\n    <div className=\"mb4\">\r\n      <span className=\"f3 tc db display dark-gray mb2\">Subscribe For More</span>\r\n      <span className=\"f5 tc db serif lh-copy\">Get updates delivered weekly!</span>\r\n    </div>\r\n    <StaticQuery\r\n      query={graphql`\r\n        query {\r\n          site {\r\n            siteMetadata {\r\n              mailChimpUrl\r\n              mailChimpToken\r\n            }\r\n          }\r\n        }\r\n      `}\r\n      render={data => (\r\n        <form className=\"w-100 db flex flex-wrap items-center justify-around\" action={data.site.siteMetadata.mailChimpUrl} method=\"POST\">\r\n          <input type=\"email\" name=\"EMAIL\" className=\"ba b--dark-gray bg-near-white pa2 sans-serif w-100 mb2\" placeholder=\"Your Email\" />\r\n          <input class=\"dn\" type=\"text\" name={data.site.siteMetadata.mailChimpToken} tabindex=\"-1\" value=\"\" />\r\n          <button type=\"submit\" className=\"ba b--dark-gray bg-dark-gray near-white sans-serif tracked ttu pv2 w-100 pointer\">Sign Up</button>\r\n        </form>\r\n      )} />\r\n  </div>\r\n)\r\n","import React from 'react';\r\nimport EmailForm from './emailForm.js';\r\nimport { StaticQuery, graphql, Link } from 'gatsby';\r\nimport Img from 'gatsby-image';\r\nimport 'tachyons';\r\n\r\n\r\nexport default props => (\r\n  <div className=\"flex flex-column justify-end items-center pa2\" style={{gridArea: \"suggested\"}}>\r\n    <span className=\"sans-serif tracked ttu tc db pv3\">CONTINUE READING</span>\r\n    <StaticQuery\r\n      query={graphql`\r\n        query {\r\n          allMarkdownRemark(\r\n            limit: 2,\r\n            sort: {order: DESC, fields: frontmatter___date},\r\n            filter: {frontmatter: {type: {eq: \"post\"}}}) {\r\n            edges {\r\n              node {\r\n                frontmatter {\r\n                  title\r\n                  slug\r\n                  metaDescription\r\n                  postImage {\r\n                    childImageSharp {\r\n                      fluid(maxWidth: 720) {\r\n                        ...GatsbyImageSharpFluid\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }  \r\n      `}\r\n      render={data => data.allMarkdownRemark.edges.map(({ node }) => (\r\n        <div className=\"w-100 mw6 tc mb4\">\r\n          <Link to={node.frontmatter.slug}>\r\n            <Img\r\n              className=\"h5\"\r\n              fluid={node.frontmatter.postImage.childImageSharp.fluid}\r\n              alt={node.frontmatter.metaDescription} />\r\n          </Link>\r\n          <Link\r\n            className=\"f4 serif tc dib pv2 ph3 display dark-gray no-underline\"\r\n            to={node.frontmatter.slug}>\r\n            {node.frontmatter.title}\r\n          </Link>\r\n        </div>\r\n      ))} />\r\n    <EmailForm />\r\n  </div>\r\n)\r\n","import React from \"react\";\r\nimport Sidebar from \"./sidebar.js\";\r\nimport Suggested from './suggested.js';\r\nimport \"tachyons\";\r\nimport \"../../common/styles/custom.tachyons.css\";\r\nimport \"../styles/grid.css\";\r\n\r\n\r\nexport default props => (\r\n  <div className=\"min-vh-100 blog__grid\">\r\n    <div style={{gridArea: \"header\"}} />\r\n    <div\r\n      className=\"mw8 serif f4 lh-copy center pa2 article__container\"\r\n      style={{gridArea: \"content\"}}\r\n      dangerouslySetInnerHTML={{__html: props.content}} />\r\n    <Sidebar\r\n      img={props.image}\r\n      desc={props.description}\r\n      location={props.location}\r\n    />\r\n    <Suggested />\r\n  </div>\r\n)\r\n","import React from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport {StaticQuery, graphql} from 'gatsby';\r\n\r\n\r\nexport default props => (\r\n  <StaticQuery\r\n    query={graphql`\r\n        query {\r\n          site {\r\n            siteMetadata {\r\n              siteTitle: title\r\n              siteUrl\r\n            }\r\n          }\r\n        }\r\n      `}\r\n      render={data => (\r\n        <Helmet>\r\n          <script type=\"application/ld+json\">{`\r\n        {\r\n          \"@context\": \"http://schema.org\",\r\n            \"@type\": \"Article\",\r\n            \"mainEntityOfPage\": {\r\n              \"@type\": \"WebPage\",\r\n              \"@id\": \"${data.site.siteMetadata.siteUrl}${props.slug}\"\r\n            },\r\n            \"headline\": \"${props.title}\",\r\n            \"image\": [\"${data.site.siteMetadata.siteUrl}${props.image}\"],\r\n            \"datePublished\": \"${props.date}\",\r\n            \"dateModified\": \"${props.date}\",\r\n            \"author\": {\r\n              \"@type\": \"Person\",\r\n              \"name\": \"${props.author}\"\r\n            },\r\n            \"publisher\": {\r\n              \"@type\": \"Organization\",\r\n              \"name\": \"${data.site.siteMetadata.siteTitle}\",\r\n              \"logo\": {\r\n                \"@type\": \"ImageObject\",\r\n                \"url\": \"${data.site.siteMetadata.siteUrl}/logo.png\"\r\n              }\r\n            },\r\n            \"description\": \"${props.description}\"\r\n        }\r\n      `}</script>\r\n  </Helmet>\r\n      )} />\r\n)\r\n","import React from 'react';\r\nimport Layout from '../common/layouts';\r\nimport Hero from './components/hero.js';\r\nimport Body from './components/body.js';\r\nimport Seo from './seo.js';\r\nimport MetaSeo from '../common/seo';\r\nimport { graphql } from 'gatsby';\r\n\r\n\r\nexport default ({location, data }) => {\r\n  const {\r\n    category,\r\n    date,\r\n    dateOriginal,\r\n    author,\r\n    title,\r\n    slug,\r\n    metaDescription\r\n  } = data.post.frontmatter;\r\n  const content = data.post.html;\r\n  return (\r\n    <Layout>\r\n      <Seo\r\n        slug={slug}\r\n        title={title}\r\n        date={dateOriginal}\r\n        description={metaDescription}\r\n        author={author}\r\n        image={data.post.frontmatter.postImage.childImageSharp.original.src} />\r\n      <MetaSeo\r\n        title={title}\r\n        description={metaDescription} />\r\n      <Hero author={author} date={date} category={category} title={title} />\r\n      <Body\r\n        content={content}\r\n        description={metaDescription}\r\n        image={data.post.frontmatter.postImage.childImageSharp.original.src}\r\n        location={location}\r\n      />\r\n    </Layout>\r\n  )\r\n}\r\n\r\n\r\nexport const query = graphql`\r\n  query($slug: String!) {\r\n    post: markdownRemark(frontmatter: {slug: {eq: $slug}}) {\r\n      html\r\n      frontmatter {\r\n        date(formatString: \"MMM Do, YYYY\")\r\n        dateOriginal: date\r\n        category\r\n        author\r\n        title\r\n        metaDescription\r\n        slug\r\n        postImage {\r\n          childImageSharp {\r\n            original {\r\n              src\r\n            }\r\n            fluid(maxWidth: 1080) {\r\n              ...GatsbyImageSharpFluid\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    date: markdownRemark(frontmatter: {slug: {eq: $slug}}) {\r\n      frontmatter {\r\n        date\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}