{"version":3,"sources":["webpack:///./src/homepage/components/hero.js","webpack:///./src/homepage/components/card.js","webpack:///./src/homepage/components/about.js","webpack:///./src/homepage/components/bio.js","webpack:///./src/pages/index.js"],"names":["props","Fragment","className","fluid","image","alt","description","title","to","query","render","data","site","siteMetadata","homepageHeader","homepageAbout","childImageSharp","class","copy","frontmatter","dangerouslySetInnerHTML","__html","html","post","featuredPost","edges","node","postImage","slug","cards","map"],"mappings":"69EAMe,G,oBAAA,SAACA,GAAD,OACb,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,CACEC,UAAU,yBACVC,MAAOH,EAAMI,MACbC,IAAKL,EAAMM,cACb,yBACEJ,UAAU,8FACV,0BAAMA,UAAU,kDAAkDF,EAAMO,OACxE,uBAAGL,UAAU,mCAAmCF,EAAMM,aACtD,kBAAC,IAAD,CAAMJ,UAAU,sFAAsFM,GAAIR,EAAMQ,IAAhH,iBCVS,WAACR,GAAD,OACb,yBAAKE,UAAU,iBACb,kBAAC,IAAD,CAAMM,GAAIR,EAAMQ,IAAI,kBAAC,IAAD,CAAKL,MAAOH,EAAMI,MAAOC,IAAI,GAAGH,UAAU,cAC9D,yBAAKA,UAAU,sCACZF,EAAMO,OAET,yBAAKL,UAAU,+BACZF,EAAMM,aAET,yBAAKJ,UAAU,iCACb,kBAAC,IAAD,CAAMM,GAAIR,EAAMQ,GAAIN,UAAU,uCAA9B,kB,YCZS,oBACb,kBAAC,IAAD,CACEO,MAAK,aAULC,OAAQ,SAACC,GAAD,OACN,yBAAKT,UAAU,sEACb,wBAAIA,UAAU,kCAAkCS,EAAKC,KAAKC,aAAaC,gBACvE,uBAAGZ,UAAU,2BAA2BS,EAAKC,KAAKC,aAAaE,eAC/D,kBAAC,IAAD,CAAMP,GAAG,SAASN,UAAU,kGAA5B,gBAfN,U,YCCa,oBACb,yBAAKA,UAAU,iEACb,kBAAC,IAAD,CACEO,MAAK,aAiBLC,OAAQ,SAACC,GAAD,OACN,kBAAC,IAAMV,SAAP,KACE,kBAAC,IAAD,CAAKE,MAAOQ,EAAKP,MAAMY,gBAAgBb,MAAOE,IAAI,aAAaH,UAAU,cACzE,yBAAKe,MAAM,qBACT,0BAAMf,UAAU,2BAA2BS,EAAKO,KAAKC,YAAYZ,OACjE,yBAAKL,UAAU,uBAAuBkB,wBAAyB,CAACC,OAAQV,EAAKO,KAAKI,WAvB1F,W,YC4BSb,GA3BE,sBAAe,IAAZE,EAAW,EAAXA,KACZY,EAAOZ,EAAKa,aAAaC,MAAM,GAAGC,KACtC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEnB,MAAO,YACPD,YAAaK,EAAKC,KAAKC,aAAaP,cACtC,kBAAC,EAAD,CACEC,MAAOgB,EAAKJ,YAAYZ,MACxBH,MAAOmB,EAAKJ,YAAYQ,UAAUX,gBAAgBb,MAClDK,GAAIe,EAAKJ,YAAYS,KACrBtB,YAAaiB,EAAKJ,YAAYb,cAChC,yBAAKJ,UAAU,gDACZS,EAAKkB,MAAMJ,MAAMK,KAAI,gBAAEJ,EAAF,EAAEA,KAAF,OACpB,kBAAC,EAAD,CACEnB,MAAOmB,EAAKP,YAAYZ,MACxBH,MAAOsB,EAAKP,YAAYQ,UAAUX,gBAAgBb,MAClDK,GAAIkB,EAAKP,YAAYS,KACrBtB,YAAaoB,EAAKP,YAAYb,kBAGpC,kBAAC,EAAD,MACA,kBAAC,EAAD,QAKY","file":"component---src-pages-index-js-e0548375a9a358863e1d.js","sourcesContent":["import React from \"react\"\r\nimport Img from 'gatsby-image';\r\nimport { Link } from 'gatsby';\r\nimport '../../common/styles/custom.tachyons.css'\r\nimport 'tachyons';\r\n\r\nexport default (props) => (\r\n  <React.Fragment>\r\n    <Img\r\n      className=\"w-100 vh-50 mw9 center\"\r\n      fluid={props.image}\r\n      alt={props.description} />\r\n    <div\r\n      className=\"h-auto bg-near-white mw9 w-100 flex flex-column items-center justify-center pv5 ph2 center\">\r\n      <span className=\"fw1 display dark-gray db tc w-100 mw7 f3 f2-ns\">{props.title}</span>\r\n      <p className=\"serif mw6 tc f5 dn dib-l mb4 db\">{props.description}</p>\r\n      <Link className=\"db pv3 ph5 tracked ttu b bg-washed-red dark-gray sans-serif no-underline hover-gray\" to={props.to}>Read More</Link>\r\n    </div>\r\n  </React.Fragment>\r\n)\r\n","import React from 'react';\r\nimport Img from 'gatsby-image';\r\nimport { Link } from 'gatsby';\r\nimport 'tachyons';\r\n\r\n\r\nexport default (props) => (\r\n  <div className=\"w-100 mw6 pa2\">\r\n    <Link to={props.to}><Img fluid={props.image} alt=\"\" className=\"w-100 h5\"/></Link>\r\n    <div className=\"pa2 display dark-gray f3 tc mb3 h3\">\r\n      {props.title}\r\n    </div>\r\n    <div className=\"pa2 lh-copy serif tc mb3 h3\">\r\n      {props.description} \r\n    </div>\r\n    <div className=\"pa2 flex justify-end serif h3\">\r\n      <Link to={props.to} className=\"dark-gray tracked ttu sans-serif f5\">Read More &raquo;</Link>\r\n    </div>\r\n  </div>\r\n)\r\n","import React from 'react';\r\nimport { Link, StaticQuery, graphql } from 'gatsby';\r\n\r\n\r\nexport default () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            homepageHeader\r\n            homepageAbout\r\n          }\r\n        }\r\n      }  \r\n    `}\r\n    render={(data) => (\r\n      <div className=\"bg-washed-red flex flex-column justify-center items-center pa2 pv5\">\r\n        <h1 className=\"fw1 display db dark-gray f2 tc\">{data.site.siteMetadata.homepageHeader}</h1>\r\n        <p className=\"f4 serif mw7 tc lh-copy\">{data.site.siteMetadata.homepageAbout}</p>\r\n        <Link to=\"/about\" className=\"mt3 db no-underline ph5 pv3 sans-serif near-white bg-dark-gray ttu tracked b hover-bg-mid-gray\">About Tyra</Link>\r\n      </div>\r\n    )} />\r\n)\r\n","import React from 'react';\r\nimport { StaticQuery, graphql } from 'gatsby';\r\nimport Img from 'gatsby-image';\r\nimport 'tachyons'\r\n\r\n\r\nexport default () => (\r\n  <div className=\"pv5 pa2 flex flex-wrap mw9 center justify-around items-center\">\r\n    <StaticQuery\r\n      query={graphql`\r\n        query {\r\n          image: file(relativePath: {eq: \"img/author.jpg\" }) {\r\n            childImageSharp {\r\n              fluid(maxWidth: 1080) {\r\n                ...GatsbyImageSharpFluid\r\n              }\r\n            }\r\n          }\r\n          copy: markdownRemark(frontmatter: {name: {eq: \"homepage__bio\"}}) {\r\n            html\r\n            frontmatter {\r\n              title\r\n            }\r\n          }\r\n        }  \r\n      `}\r\n      render={(data) => (\r\n        <React.Fragment>\r\n          <Img fluid={data.image.childImageSharp.fluid} alt=\"The Author\" className=\"w-100 mw6\" />\r\n          <div class=\"w-100 pa2 mw6 mv4\">\r\n            <span className=\"db f2 display dark-gray\">{data.copy.frontmatter.title}</span>\r\n            <div className=\"lh-copy f5 serif mt4\" dangerouslySetInnerHTML={{__html: data.copy.html}} />\r\n          </div>\r\n        </React.Fragment>\r\n    )} />\r\n  </div>\r\n)\r\n","import React from \"react\"\r\nimport Layout from '../common/layouts';\r\nimport { graphql } from 'gatsby';\r\nimport Hero from '../homepage/components/hero';\r\nimport Card from '../homepage/components/card';\r\nimport About from '../homepage/components/about';\r\nimport Bio from '../homepage/components/bio';\r\nimport Seo from '../common/seo';\r\n\r\nexport default ({ data }) => {\r\n  let post = data.featuredPost.edges[0].node;\r\n  return (\r\n    <Layout>\r\n      <Seo\r\n        title={\"Home Page\"}\r\n        description={data.site.siteMetadata.description} />\r\n      <Hero\r\n        title={post.frontmatter.title}\r\n        image={post.frontmatter.postImage.childImageSharp.fluid}\r\n        to={post.frontmatter.slug}\r\n        description={post.frontmatter.description} />\r\n      <div className=\"flex flex-wrap center mw9 justify-around pb3\">\r\n        {data.cards.edges.map(({node}) => (\r\n          <Card\r\n            title={node.frontmatter.title}\r\n            image={node.frontmatter.postImage.childImageSharp.fluid}\r\n            to={node.frontmatter.slug}\r\n            description={node.frontmatter.description} />\r\n        ))}\r\n      </div>\r\n      <About />\r\n      <Bio />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query {\r\n    featuredPost: allMarkdownRemark(\r\n      limit: 1,\r\n      sort: {order: DESC, fields: frontmatter___date},\r\n      filter: {frontmatter: {type: {eq: \"post\"}}}) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            description: metaDescription\r\n            slug\r\n            postImage {\r\n              childImageSharp {\r\n                fluid(maxWidth: 1920) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    cards: allMarkdownRemark(\r\n      skip: 1,\r\n      limit: 3,\r\n      sort: {order: DESC, fields: frontmatter___date},\r\n      filter: {frontmatter: {type: {eq: \"post\"}}}) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            description: metaDescription\r\n            slug\r\n            postImage {\r\n              childImageSharp {\r\n                fluid(maxWidth: 1920) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    site {\r\n      siteMetadata {\r\n        description\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}